[{"id":0,"href":"/docs/study/java/","title":"Java","section":"Study","content":" Java # "},{"id":1,"href":"/docs/memory/2022/11/","title":"Nov","section":"2022","content":" 2022.11 # "},{"id":2,"href":"/docs/study/java/Lambda/Lambda1/","title":"람다식","section":"Lambda","content":" 람다식 Lambda Expression # 794 ~ 800p\n람다식 # Java 8 부터 제공되는 메서드를 하나의 식으로 표현하는 기능\n람다식을 사용하면 메서드의 이름과 반환값이 없어지므로 익명함수 Anonymous Function 라고 부르기도 한다.\n람다식의 사용방법을 예제로 살펴보자.\n람다식 X\nint[] arr = new int[5]; Arrays.setAll(arr, method()); int method() { return (int) (Math.random() * 5) + 1; } 람다식 O\nint[] arr = new int[5]; Arrays.setAll(arr, (i) -\u0026gt; (int)(Math.random() * 5) + 1); 위와 같이 람다식을 사용하면 따로 메서드를 선언-정의-호출해 줄 필요가 없다.\n규칙1. 매개변수 타입을 추론 가능할 경우 생략할 수 있다. # (int a, int b) -\u0026gt; a \u0026gt; b ? a : b (a, b) -\u0026gt; a \u0026gt; b ? a : b 규칙2. 표현식이 하나일 경우 대괄호는 생략할 수 있다. # (String name, int i) -\u0026gt; { System.out.println(name + \u0026#34;=\u0026#34; + i); } (String name, int i) -\u0026gt; System.out.println(name + \u0026#34;=\u0026#34; + i) 함수형 인터페이스 # 자바에서 모든 메서드는 클래스 내에 포함돼야 한다.\n람다식은 어떤 클래스에 포함돼있을까?\n사실 람다식은 메서드와 동등하지 않고, 익명 클래스의 객체와 동등하다.\n(int a, int b) -\u0026gt; a \u0026gt; b ? a : b new Object() { int max(int a, int b) { return a \u0026gt; b ? a : b; } } // max() 메서드는 임의의 메서드로 큰 의미는 없다. 그렇다면 만약 해당 객체를 임의의 참조변수에 저장한다면 어떻게 될까?\n타입 temp = (int a, int b) -\u0026gt; a \u0026gt; b ? a : b; 예를 들어, MyFunction 이라는 인터페이스가 정의돼 있다.\nInterface MyFunction { public abstract int max(int a, int b); } 이 인터페이스를 구현한 익명 클래스는 다음과 같이 생성해서 사용가능하다.\nMyFunction temp = new MyFunction() { @Override public int max(int a, int b) { return a \u0026gt; b ? a : b; } }; int num = temp.max(5, 3); 람다식이 어떤 방식으로 구현되고 있는지 이해가 되는가?\n하나의 인터페이스에 하나의 추상메서드를 정의해 람다식을 구현하는 방식은 자바의 규칙을 어기지 않는다.\n이렇게 람다식을 다루기 위한 인터페이스를 함수형 인터페이스 Functional Interface 라고 부른다.\n@FunctionalInterface interface MyFunction { public abstract int max(int a, int b); } 규칙1. 하나의 인터페이스에 하나의 추상메서드만 정의 가능하다. # 함수형 인터페이스의 경우 하나의 인터페이스에 하나의 추상메서드만이 정의될 수 있다.\n그래야 람다식과 인터페이스가 1대1 로 매핑될 수 있기 때문이다.\n규칙2. static 메서드와 default 메서드의 개수에는 제약이 없다. # static 과 default 키워드가 붙은 메서드의 개수에는 제약이 없다.\n핵심 정리 # 핵심은 메서드를 주고 받는 것이 아니라 함수형 인터페이스를 구현한 익명 객체를 주고 받는다는 것이다.\n@FunctionalInterface interface MyFunction { void run(); } class LamdaEx { static void excute(MyFunction f) { f.run(); } static MyFunction getMyFunction() { MyFunction f = new MyFunction() { @Override public void run() { System.out.println(\u0026#34;MyFunction run\u0026#34;); } }; return f; } static MyFunction getMyFunctionLamda() { MyFunction f = () -\u0026gt; System.out.println(\u0026#34;MyFunction Lamda run\u0026#34;); return f; } public static void main(String[] args) { MyFunction f1 = getMyFunction(); MyFunction f2 = getMyFunctionLamda(); f1.run(); f2.run(); excute(f1); } } MyFunction run MyFunction Lamda run MyFunction run "},{"id":3,"href":"/docs/study/git/","title":"Git","section":"Study","content":" Git # "},{"id":4,"href":"/docs/study/java/Lambda/Lambda2/","title":"람다식의 타입과 형변환","section":"Lambda","content":" 람다식 Lambda Expression # 람다식의 장단점 # 장점 # 기존 익명함수 코드를 줄여 간단하게 작성 가능 가독성 증가 병렬 프로그래밍에 용이 단점 # 남용하면 코드를 이해하는데 어려움 까다로운 재귀 활용 및 디버깅 "},{"id":5,"href":"/posts/1/","title":"대망의 블로그 첫 게시글","section":"etc","content":" 일 벌리기 선수 # 개발 공부를 한지도 벌써 약 5개월정도 지난 지금.. 처음보다 아는 것은 많은 것 같은데, 뭐 하나 제대로 알고 있는 것이 없다는 생각이 들었다. 🫠 여러 곳에 흩어져 있는 정리본들을 하나하나 다시 정리하고 공부할 필요성을 느꼈다.\n처음엔 그냥 해오던 것처럼 Notion 이나 Bear 같은 개인 공간에 정리할까 했지만 이왕 공부하고 정리하는 김에 남들에게 보여줄 수 있는 공간에 정리하면 좋겠다 싶었다.\n지나치지 못하고 이렇게 또 일을 만들어버렸다. 😂\nJekyll? Hugo? # 무슨 블로그가 좋을까 고민을 했다.\n일단 티스토리와 velog는 쓰고 싶지 않았다. 예전에 잠깐 블로그를 찍먹해봤을때 티스토리는 뭔가 조잡한 느낌이었고, velog는 너무 간단해서 오히려 불편했다.\n그렇다면 이참에 Github 를 이용해 블로그와 코드들을 통합관리해보자! 하는 생각에 Github 를 이용해 블로그를 개설키로 했다.\n조금 찾아보니 Hugo 와 Jekyll 을 이용해 블로그를 개설하는 방법이 대표적인 것 같았다.\nJekyll 은 github 의 CEO 가 만든 Ruby 기반의 툴로 좀 더 공식적인(?) 느낌이 있었다. 조금만 찾아보니 많은 사람들이 빌드 속도를 이유로 Hugo 를 사용하더라. Hugo 는 Go 기반의 툴로 빌드 속도가 Jekyll 에 비해 훨씬 빠르다고 한다.\n이러한 이유로 Hugo 를 선택했다.\n뻘짓의 연속 # 처음엔 금방 할 줄 알았지만 착각이었다. 🤬\n블로그 적당히 보고 따라하면 될 줄 알았다. 하지만 이유 모를 에러 속에서 허우적댔고 블로그 개설을 겨우 마친 뒤에는\n까다로운 사용방법이 나를 기다리고 있었다.\n배보다 배꼽이 더 커지는 불상사가..\n원래 첫 게시글로 나와 같은 상황에 직면할 사람들을 위해 Hugo 적용 방법을 게시하고 싶었지만,\n이것저것 들여다본다고 시간이 너무 많이 지나서 첫 글은 조금 급하게 마무리한다.\n시간적 여유가 있을 때 꼭 올리도록 하겠다 🙆‍♂️\n해결해야 될 것들 # 날짜 설정이 한국기준이 아닌지, 오늘 날짜만 적용이 되지 않는다.. 메인 페이지에서 댓글창 빼고 싶다.. "}]